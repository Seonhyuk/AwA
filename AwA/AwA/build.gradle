plugins {
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web' //web
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' //spring data jpa
	implementation("com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0") //sql 이쁘게 보여주는거
	implementation('org.glassfish:jakarta.el') //얜 뭐였지?
	implementation('org.springframework.boot:spring-boot-starter-validation') //얘도 뭐였지?

	implementation 'org.springframework.boot:spring-boot-starter-security' //스프링 시큐리티

	implementation 'io.jsonwebtoken:jjwt-api:0.11.2' //jwt
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'

	compileOnly 'org.projectlombok:lombok' //lombok
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:2.7.4' //mariaDB

	testImplementation 'org.springframework.boot:spring-boot-starter-test' //test용

	testImplementation("org.junit.vintage:junit-vintage-engine") {
		exclude group: "org.hamcrest", module: "hamcrest-core"
	} //JUnit4 추가

	// Swagger 2
	implementation( group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2')
	implementation( group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2')

	implementation 'mysql:mysql-connector-java'


}

tasks.named('test') {
	useJUnitPlatform()
}

def frontendDir = "$projectDir/src/main/frontend"

sourceSets {
	main {
		resources { srcDirs = ["$projectDir/src/main/resources"]
		}
	}
}

processResources { dependsOn "copyReactBuildFiles" }

task installReact(type: Exec) {
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "audit", "fix"
		commandLine 'npm.cmd', 'install' }
	else {
		commandLine "npm", "audit", "fix" commandLine 'npm', 'install'
	}
}

task buildReact(type: Exec) {
	dependsOn "installReact"
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "run-script", "build"
	} else {
		commandLine "npm", "run-script", "build"
	}
}

task copyReactBuildFiles(type: Copy) {
	dependsOn "buildReact"
	from "$frontendDir/build"
	into "$projectDir/src/main/resources/static"
}