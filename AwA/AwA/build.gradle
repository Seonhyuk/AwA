buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	//querydsl 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web' //web
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' //spring data jpa
	implementation("com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0") //sql 이쁘게 보여주는거
	implementation('org.glassfish:jakarta.el') //얜 뭐였지?
	implementation('org.springframework.boot:spring-boot-starter-validation') //얘도 뭐였지?

	implementation 'org.springframework.boot:spring-boot-starter-security' //스프링 시큐리티

	implementation 'io.jsonwebtoken:jjwt-api:0.11.2' //jwt
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'

	compileOnly 'org.projectlombok:lombok' //lombok
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:2.7.4' //mariaDB

	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	implementation 'org.springframework.boot:spring-boot-starter-mail' //mail

	testImplementation 'org.springframework.boot:spring-boot-starter-test' //test용

	testImplementation("org.junit.vintage:junit-vintage-engine") {
		exclude group: "org.hamcrest", module: "hamcrest-core"
	} //JUnit4 추가

	// Swagger 2
	implementation( group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2')
	implementation( group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2')

	implementation 'mysql:mysql-connector-java'
//querydsl 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

}

tasks.named('test') {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}